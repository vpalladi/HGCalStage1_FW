////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 2.6
//  \   \         Application : 7 Series FPGAs Transceivers Wizard 
//  /   /         Filename : xilinx_gth_16b_5g_cpll_exdes.v
// /___/   /\     
// \   \  /  \ 
//  \___\/\___\ 
//
//
// Module xilinx_gth_16b_5g_cpll_exdes
// Generated by Xilinx 7 Series FPGAs Transceivers Wizard
// 
// 
// (c) Copyright 2010-2012 Xilinx, Inc. All rights reserved.
// 
// This file contains confidential and proprietary information
// of Xilinx, Inc. and is protected under U.S. and
// international copyright and other intellectual property
// laws.
// 
// DISCLAIMER
// This disclaimer is not a license and does not grant any
// rights to the materials distributed herewith. Except as
// otherwise provided in a valid license issued to you by
// Xilinx, and to the maximum extent permitted by applicable
// law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
// WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
// AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
// BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
// INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
// (2) Xilinx shall not be liable (whether in contract or tort,
// including negligence, or under any other theory of
// liability) for any loss or damage of any kind or nature
// related to, arising under or in connection with these
// materials, including for any direct, or any indirect,
// special, incidental, or consequential loss or damage
// (including loss of data, profits, goodwill, or any type of
// loss or damage suffered as a result of any action brought
// by a third party) even if such damage or loss was
// reasonably foreseeable or Xilinx had been advised of the
// possibility of the same.
// 
// CRITICAL APPLICATIONS
// Xilinx products are not designed or intended to be fail-
// safe, or for use in any application requiring fail-safe
// performance, such as life-support or safety devices or
// systems, Class III medical devices, nuclear facilities,
// applications related to the deployment of airbags, or any
// other applications that could lead to death, personal
// injury, or severe property or environmental damage
// (individually and collectively, "Critical
// Applications"). Customer assumes the sole risk and
// liability of any use of Xilinx products in Critical
// Applications, subject only to applicable laws and
// regulations governing limitations on product liability.
// 
// THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
// PART OF THIS FILE AT ALL TIMES. 


`timescale 1ns / 1ps
`define DLY #1


//***********************************Entity Declaration************************
(* CORE_GENERATION_INFO = "xilinx_gth_16b_5g_cpll,gtwizard_v2_6,{protocol_file=Start_from_scratch}" *)
module xilinx_gth_16b_5g_cpll_exdes #
(
    parameter EXAMPLE_CONFIG_INDEPENDENT_LANES     =   1,//configuration for frame gen and check
    parameter STABLE_CLOCK_PERIOD                  =   32, // Period of the stable clock driving this init module, unit is [ns] 
    parameter EXAMPLE_LANE_WITH_START_CHAR         =   0,         // specifies lane with unique start frame char
    parameter EXAMPLE_WORDS_IN_BRAM                =   512,       // specifies amount of data in BRAM
    parameter EXAMPLE_SIM_GTRESET_SPEEDUP          =   "TRUE",    // simulation setting for GT SecureIP model
    parameter EXAMPLE_USE_CHIPSCOPE                =   0,         // Set to 1 to use Chipscope to drive resets
    parameter EXAMPLE_SIMULATION                   =   0          // Set to 1 for Simulation

)
(
    input wire  Q7_CLK0_GTREFCLK_PAD_N_IN,
    input wire  Q7_CLK0_GTREFCLK_PAD_P_IN,
    input wire  DRP_CLK_IN,
    input wire  GTTX_RESET_IN,
    input wire  GTRX_RESET_IN,
    input wire  CPLL_RESET_IN,
    input wire  QPLL_RESET_IN,
    output wire TRACK_DATA_OUT,
    input  wire [3:0]   RXN_IN,
    input  wire [3:0]   RXP_IN,
    output wire [3:0]   TXN_OUT,
    output wire [3:0]   TXP_OUT
);



//************************** Register Declarations ****************************

    wire            gt0_txfsmresetdone_i;
    wire            gt0_rxfsmresetdone_i;
    reg             gt0_txfsmresetdone_r;
    reg             gt0_txfsmresetdone_r2;
    reg             gt0_rxresetdone_r;
    reg             gt0_rxresetdone_r2;
    reg             gt0_rxresetdone_r3;
  

    wire            gt1_txfsmresetdone_i;
    wire            gt1_rxfsmresetdone_i;
    reg             gt1_txfsmresetdone_r;
    reg             gt1_txfsmresetdone_r2;
    reg             gt1_rxresetdone_r;
    reg             gt1_rxresetdone_r2;
    reg             gt1_rxresetdone_r3;
  

    wire            gt2_txfsmresetdone_i;
    wire            gt2_rxfsmresetdone_i;
    reg             gt2_txfsmresetdone_r;
    reg             gt2_txfsmresetdone_r2;
    reg             gt2_rxresetdone_r;
    reg             gt2_rxresetdone_r2;
    reg             gt2_rxresetdone_r3;
  

    wire            gt3_txfsmresetdone_i;
    wire            gt3_rxfsmresetdone_i;
    reg             gt3_txfsmresetdone_r;
    reg             gt3_txfsmresetdone_r2;
    reg             gt3_rxresetdone_r;
    reg             gt3_rxresetdone_r2;
    reg             gt3_rxresetdone_r3;
  


//**************************** Wire Declarations ******************************//
    //------------------------ GT Wrapper Wires ------------------------------
    //________________________________________________________________________
    //________________________________________________________________________
    //GT0   (X1Y32)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt0_cpllfbclklost_i;
    wire            gt0_cplllock_i;
    wire            gt0_cpllrefclklost_i;
    wire            gt0_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt0_drpaddr_i;
    wire    [15:0]  gt0_drpdi_i;
    wire    [15:0]  gt0_drpdo_i;
    wire            gt0_drpen_i;
    wire            gt0_drprdy_i;
    wire            gt0_drpwe_i;
    //----------------------------- Loopback Ports -----------------------------
    wire    [2:0]   gt0_loopback_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt0_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt0_eyescandataerror_i;
    //----------------------- Receive Ports - CDR Ports ------------------------
    wire            gt0_rxcdrlock_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [15:0]  gt0_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt0_rxprbserr_i;
    wire    [2:0]   gt0_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt0_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [1:0]   gt0_rxdisperr_i;
    wire    [1:0]   gt0_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt0_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt0_rxbyteisaligned_i;
    wire            gt0_rxcommadet_i;
    wire            gt0_rxmcommaalignen_i;
    wire            gt0_rxpcommaalignen_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt0_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt0_gtrxreset_i;
    //--------------- Receive Ports - RX Polarity Control Ports ----------------
    wire            gt0_rxpolarity_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [1:0]   gt0_rxchariscomma_i;
    wire    [1:0]   gt0_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt0_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt0_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt0_gttxreset_i;
    wire            gt0_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [15:0]  gt0_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt0_gthtxn_i;
    wire            gt0_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt0_txoutclk_i;
    wire            gt0_txoutclkfabric_i;
    wire            gt0_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt0_txresetdone_i;
    //--------------- Transmit Ports - TX Polarity Control Ports ---------------
    wire            gt0_txpolarity_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt0_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [1:0]   gt0_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT1   (X1Y33)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt1_cpllfbclklost_i;
    wire            gt1_cplllock_i;
    wire            gt1_cpllrefclklost_i;
    wire            gt1_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt1_drpaddr_i;
    wire    [15:0]  gt1_drpdi_i;
    wire    [15:0]  gt1_drpdo_i;
    wire            gt1_drpen_i;
    wire            gt1_drprdy_i;
    wire            gt1_drpwe_i;
    //----------------------------- Loopback Ports -----------------------------
    wire    [2:0]   gt1_loopback_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt1_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt1_eyescandataerror_i;
    //----------------------- Receive Ports - CDR Ports ------------------------
    wire            gt1_rxcdrlock_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [15:0]  gt1_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt1_rxprbserr_i;
    wire    [2:0]   gt1_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt1_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [1:0]   gt1_rxdisperr_i;
    wire    [1:0]   gt1_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt1_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt1_rxbyteisaligned_i;
    wire            gt1_rxcommadet_i;
    wire            gt1_rxmcommaalignen_i;
    wire            gt1_rxpcommaalignen_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt1_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt1_gtrxreset_i;
    //--------------- Receive Ports - RX Polarity Control Ports ----------------
    wire            gt1_rxpolarity_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [1:0]   gt1_rxchariscomma_i;
    wire    [1:0]   gt1_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt1_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt1_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt1_gttxreset_i;
    wire            gt1_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [15:0]  gt1_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt1_gthtxn_i;
    wire            gt1_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt1_txoutclk_i;
    wire            gt1_txoutclkfabric_i;
    wire            gt1_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt1_txresetdone_i;
    //--------------- Transmit Ports - TX Polarity Control Ports ---------------
    wire            gt1_txpolarity_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt1_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [1:0]   gt1_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT2   (X1Y34)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt2_cpllfbclklost_i;
    wire            gt2_cplllock_i;
    wire            gt2_cpllrefclklost_i;
    wire            gt2_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt2_drpaddr_i;
    wire    [15:0]  gt2_drpdi_i;
    wire    [15:0]  gt2_drpdo_i;
    wire            gt2_drpen_i;
    wire            gt2_drprdy_i;
    wire            gt2_drpwe_i;
    //----------------------------- Loopback Ports -----------------------------
    wire    [2:0]   gt2_loopback_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt2_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt2_eyescandataerror_i;
    //----------------------- Receive Ports - CDR Ports ------------------------
    wire            gt2_rxcdrlock_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [15:0]  gt2_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt2_rxprbserr_i;
    wire    [2:0]   gt2_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt2_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [1:0]   gt2_rxdisperr_i;
    wire    [1:0]   gt2_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt2_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt2_rxbyteisaligned_i;
    wire            gt2_rxcommadet_i;
    wire            gt2_rxmcommaalignen_i;
    wire            gt2_rxpcommaalignen_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt2_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt2_gtrxreset_i;
    //--------------- Receive Ports - RX Polarity Control Ports ----------------
    wire            gt2_rxpolarity_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [1:0]   gt2_rxchariscomma_i;
    wire    [1:0]   gt2_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt2_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt2_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt2_gttxreset_i;
    wire            gt2_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [15:0]  gt2_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt2_gthtxn_i;
    wire            gt2_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt2_txoutclk_i;
    wire            gt2_txoutclkfabric_i;
    wire            gt2_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt2_txresetdone_i;
    //--------------- Transmit Ports - TX Polarity Control Ports ---------------
    wire            gt2_txpolarity_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt2_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [1:0]   gt2_txcharisk_i;

    //________________________________________________________________________
    //________________________________________________________________________
    //GT3   (X1Y35)
    //------------------------------- CPLL Ports -------------------------------
    wire            gt3_cpllfbclklost_i;
    wire            gt3_cplllock_i;
    wire            gt3_cpllrefclklost_i;
    wire            gt3_cpllreset_i;
    //-------------------------- Channel - DRP Ports  --------------------------
    wire    [8:0]   gt3_drpaddr_i;
    wire    [15:0]  gt3_drpdi_i;
    wire    [15:0]  gt3_drpdo_i;
    wire            gt3_drpen_i;
    wire            gt3_drprdy_i;
    wire            gt3_drpwe_i;
    //----------------------------- Loopback Ports -----------------------------
    wire    [2:0]   gt3_loopback_i;
    //------------------- RX Initialization and Reset Ports --------------------
    wire            gt3_rxuserrdy_i;
    //------------------------ RX Margin Analysis Ports ------------------------
    wire            gt3_eyescandataerror_i;
    //----------------------- Receive Ports - CDR Ports ------------------------
    wire            gt3_rxcdrlock_i;
    //---------------- Receive Ports - FPGA RX interface Ports -----------------
    wire    [15:0]  gt3_rxdata_i;
    //----------------- Receive Ports - Pattern Checker Ports ------------------
    wire            gt3_rxprbserr_i;
    wire    [2:0]   gt3_rxprbssel_i;
    //----------------- Receive Ports - Pattern Checker ports ------------------
    wire            gt3_rxprbscntreset_i;
    //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
    wire    [1:0]   gt3_rxdisperr_i;
    wire    [1:0]   gt3_rxnotintable_i;
    //---------------------- Receive Ports - RX AFE Ports ----------------------
    wire            gt3_gthrxn_i;
    //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
    wire            gt3_rxbyteisaligned_i;
    wire            gt3_rxcommadet_i;
    wire            gt3_rxmcommaalignen_i;
    wire            gt3_rxpcommaalignen_i;
    //------------- Receive Ports - RX Fabric Output Control Ports -------------
    wire            gt3_rxoutclk_i;
    //----------- Receive Ports - RX Initialization and Reset Ports ------------
    wire            gt3_gtrxreset_i;
    //--------------- Receive Ports - RX Polarity Control Ports ----------------
    wire            gt3_rxpolarity_i;
    //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
    wire    [1:0]   gt3_rxchariscomma_i;
    wire    [1:0]   gt3_rxcharisk_i;
    //---------------------- Receive Ports -RX AFE Ports -----------------------
    wire            gt3_gthrxp_i;
    //------------ Receive Ports -RX Initialization and Reset Ports ------------
    wire            gt3_rxresetdone_i;
    //------------------- TX Initialization and Reset Ports --------------------
    wire            gt3_gttxreset_i;
    wire            gt3_txuserrdy_i;
    //---------------- Transmit Ports - TX Data Path interface -----------------
    wire    [15:0]  gt3_txdata_i;
    //-------------- Transmit Ports - TX Driver and OOB signaling --------------
    wire            gt3_gthtxn_i;
    wire            gt3_gthtxp_i;
    //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
    wire            gt3_txoutclk_i;
    wire            gt3_txoutclkfabric_i;
    wire            gt3_txoutclkpcs_i;
    //----------- Transmit Ports - TX Initialization and Reset Ports -----------
    wire            gt3_txresetdone_i;
    //--------------- Transmit Ports - TX Polarity Control Ports ---------------
    wire            gt3_txpolarity_i;
    //---------------- Transmit Ports - pattern Generator Ports ----------------
    wire    [2:0]   gt3_txprbssel_i;
    //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
    wire    [1:0]   gt3_txcharisk_i;

    //____________________________COMMON PORTS________________________________
    //----------------------- Common Block - QPLL Ports ------------------------
    wire            gt0_qplllock_i;
    wire            gt0_qpllrefclklost_i;
    wire            gt0_qpllreset_i;


    //----------------------------- Global Signals -----------------------------

    wire            drpclk_in_i;
    wire            gt0_tx_system_reset_c;
    wire            gt0_rx_system_reset_c;
    wire            gt1_tx_system_reset_c;
    wire            gt1_rx_system_reset_c;
    wire            gt2_tx_system_reset_c;
    wire            gt2_rx_system_reset_c;
    wire            gt3_tx_system_reset_c;
    wire            gt3_rx_system_reset_c;
    wire            tied_to_ground_i;
    wire    [63:0]  tied_to_ground_vec_i;
    wire            tied_to_vcc_i;
    wire    [7:0]   tied_to_vcc_vec_i;
    wire            GTTXRESET_IN;
    wire            GTRXRESET_IN;
    wire            CPLLRESET_IN;
    wire            QPLLRESET_IN;

     //--------------------------- User Clocks ---------------------------------
    (* keep = "TRUE" *) wire            gt0_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt0_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt0_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt0_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt1_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt1_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt1_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt1_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt2_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt2_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt2_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt2_rxusrclk2_i; 
    (* keep = "TRUE" *) wire            gt3_txusrclk_i; 
    (* keep = "TRUE" *) wire            gt3_txusrclk2_i; 
    (* keep = "TRUE" *) wire            gt3_rxusrclk_i; 
    (* keep = "TRUE" *) wire            gt3_rxusrclk2_i; 
  
    //--------------------------- Reference Clocks ----------------------------
    
    wire            q7_clk0_refclk_i;

    //--------------------- Frame check/gen Module Signals --------------------
    wire            gt0_matchn_i;
    
    wire    [5:0]   gt0_txcharisk_float_i;
   
    wire    [15:0]  gt0_txdata_float16_i;
    wire    [47:0]  gt0_txdata_float_i;
    
    
    wire            gt0_block_sync_i;
    wire            gt0_track_data_i;
    wire    [7:0]   gt0_error_count_i;
    wire            gt0_frame_check_reset_i;
    wire            gt0_inc_in_i;
    wire            gt0_inc_out_i;
    wire    [15:0]  gt0_unscrambled_data_i;

    wire            gt1_matchn_i;
    
    wire    [5:0]   gt1_txcharisk_float_i;
   
    wire    [15:0]  gt1_txdata_float16_i;
    wire    [47:0]  gt1_txdata_float_i;
    
    
    wire            gt1_block_sync_i;
    wire            gt1_track_data_i;
    wire    [7:0]   gt1_error_count_i;
    wire            gt1_frame_check_reset_i;
    wire            gt1_inc_in_i;
    wire            gt1_inc_out_i;
    wire    [15:0]  gt1_unscrambled_data_i;

    wire            gt2_matchn_i;
    
    wire    [5:0]   gt2_txcharisk_float_i;
   
    wire    [15:0]  gt2_txdata_float16_i;
    wire    [47:0]  gt2_txdata_float_i;
    
    
    wire            gt2_block_sync_i;
    wire            gt2_track_data_i;
    wire    [7:0]   gt2_error_count_i;
    wire            gt2_frame_check_reset_i;
    wire            gt2_inc_in_i;
    wire            gt2_inc_out_i;
    wire    [15:0]  gt2_unscrambled_data_i;

    wire            gt3_matchn_i;
    
    wire    [5:0]   gt3_txcharisk_float_i;
   
    wire    [15:0]  gt3_txdata_float16_i;
    wire    [47:0]  gt3_txdata_float_i;
    
    
    wire            gt3_block_sync_i;
    wire            gt3_track_data_i;
    wire    [7:0]   gt3_error_count_i;
    wire            gt3_frame_check_reset_i;
    wire            gt3_inc_in_i;
    wire            gt3_inc_out_i;
    wire    [15:0]  gt3_unscrambled_data_i;

    wire            reset_on_data_error_i;
    wire            track_data_out_i;
  

    //--------------------- Chipscope Signals ---------------------------------

    wire    [35:0]  tx_data_vio_control_i;
    wire    [35:0]  rx_data_vio_control_i;
    wire    [35:0]  shared_vio_control_i;
    wire    [35:0]  ila_control_i;
    wire    [35:0]  channel_drp_vio_control_i;
    wire    [35:0]  common_drp_vio_control_i;
    wire    [31:0]  tx_data_vio_async_in_i;
    wire    [31:0]  tx_data_vio_sync_in_i;
    wire    [31:0]  tx_data_vio_async_out_i;
    wire    [31:0]  tx_data_vio_sync_out_i;
    wire    [31:0]  rx_data_vio_async_in_i;
    wire    [31:0]  rx_data_vio_sync_in_i;
    wire    [31:0]  rx_data_vio_async_out_i;
    wire    [31:0]  rx_data_vio_sync_out_i;
    wire    [31:0]  shared_vio_in_i;
    wire    [31:0]  shared_vio_out_i;
    wire    [163:0] ila_in_i;
    wire    [31:0]  channel_drp_vio_async_in_i;
    wire    [31:0]  channel_drp_vio_sync_in_i;
    wire    [31:0]  channel_drp_vio_async_out_i;
    wire    [31:0]  channel_drp_vio_sync_out_i;
    wire    [31:0]  common_drp_vio_async_in_i;
    wire    [31:0]  common_drp_vio_sync_in_i;
    wire    [31:0]  common_drp_vio_async_out_i;
    wire    [31:0]  common_drp_vio_sync_out_i;

    wire    [31:0]  gt0_tx_data_vio_async_in_i;
    wire    [31:0]  gt0_tx_data_vio_sync_in_i;
    wire    [31:0]  gt0_tx_data_vio_async_out_i;
    wire    [31:0]  gt0_tx_data_vio_sync_out_i;
    wire    [31:0]  gt0_rx_data_vio_async_in_i;
    wire    [31:0]  gt0_rx_data_vio_sync_in_i;
    wire    [31:0]  gt0_rx_data_vio_async_out_i;
    wire    [31:0]  gt0_rx_data_vio_sync_out_i;
    wire    [163:0] gt0_ila_in_i;
    wire    [31:0]  gt0_channel_drp_vio_async_in_i;
    wire    [31:0]  gt0_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt0_channel_drp_vio_async_out_i;
    wire    [31:0]  gt0_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt0_common_drp_vio_async_in_i;
    wire    [31:0]  gt0_common_drp_vio_sync_in_i;
    wire    [31:0]  gt0_common_drp_vio_async_out_i;
    wire    [31:0]  gt0_common_drp_vio_sync_out_i;

    wire    [31:0]  gt1_tx_data_vio_async_in_i;
    wire    [31:0]  gt1_tx_data_vio_sync_in_i;
    wire    [31:0]  gt1_tx_data_vio_async_out_i;
    wire    [31:0]  gt1_tx_data_vio_sync_out_i;
    wire    [31:0]  gt1_rx_data_vio_async_in_i;
    wire    [31:0]  gt1_rx_data_vio_sync_in_i;
    wire    [31:0]  gt1_rx_data_vio_async_out_i;
    wire    [31:0]  gt1_rx_data_vio_sync_out_i;
    wire    [163:0] gt1_ila_in_i;
    wire    [31:0]  gt1_channel_drp_vio_async_in_i;
    wire    [31:0]  gt1_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt1_channel_drp_vio_async_out_i;
    wire    [31:0]  gt1_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt1_common_drp_vio_async_in_i;
    wire    [31:0]  gt1_common_drp_vio_sync_in_i;
    wire    [31:0]  gt1_common_drp_vio_async_out_i;
    wire    [31:0]  gt1_common_drp_vio_sync_out_i;

    wire    [31:0]  gt2_tx_data_vio_async_in_i;
    wire    [31:0]  gt2_tx_data_vio_sync_in_i;
    wire    [31:0]  gt2_tx_data_vio_async_out_i;
    wire    [31:0]  gt2_tx_data_vio_sync_out_i;
    wire    [31:0]  gt2_rx_data_vio_async_in_i;
    wire    [31:0]  gt2_rx_data_vio_sync_in_i;
    wire    [31:0]  gt2_rx_data_vio_async_out_i;
    wire    [31:0]  gt2_rx_data_vio_sync_out_i;
    wire    [163:0] gt2_ila_in_i;
    wire    [31:0]  gt2_channel_drp_vio_async_in_i;
    wire    [31:0]  gt2_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt2_channel_drp_vio_async_out_i;
    wire    [31:0]  gt2_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt2_common_drp_vio_async_in_i;
    wire    [31:0]  gt2_common_drp_vio_sync_in_i;
    wire    [31:0]  gt2_common_drp_vio_async_out_i;
    wire    [31:0]  gt2_common_drp_vio_sync_out_i;

    wire    [31:0]  gt3_tx_data_vio_async_in_i;
    wire    [31:0]  gt3_tx_data_vio_sync_in_i;
    wire    [31:0]  gt3_tx_data_vio_async_out_i;
    wire    [31:0]  gt3_tx_data_vio_sync_out_i;
    wire    [31:0]  gt3_rx_data_vio_async_in_i;
    wire    [31:0]  gt3_rx_data_vio_sync_in_i;
    wire    [31:0]  gt3_rx_data_vio_async_out_i;
    wire    [31:0]  gt3_rx_data_vio_sync_out_i;
    wire    [163:0] gt3_ila_in_i;
    wire    [31:0]  gt3_channel_drp_vio_async_in_i;
    wire    [31:0]  gt3_channel_drp_vio_sync_in_i;
    wire    [31:0]  gt3_channel_drp_vio_async_out_i;
    wire    [31:0]  gt3_channel_drp_vio_sync_out_i;
    wire    [31:0]  gt3_common_drp_vio_async_in_i;
    wire    [31:0]  gt3_common_drp_vio_sync_in_i;
    wire    [31:0]  gt3_common_drp_vio_async_out_i;
    wire    [31:0]  gt3_common_drp_vio_sync_out_i;


    wire            gttxreset_i;
    wire            gtrxreset_i;
    wire    [1:0]   mux_sel_i;

    wire            user_tx_reset_i;
    wire            user_rx_reset_i;
    wire            tx_vio_clk_i;
    wire            tx_vio_clk_mux_out_i;    
    wire            rx_vio_ila_clk_i;
    wire            rx_vio_ila_clk_mux_out_i;

    wire            cpllreset_i;
    


//**************************** Main Body of Code *******************************

    //  Static signal Assigments    
    assign tied_to_ground_i      = 1'b0;
    assign tied_to_ground_vec_i  = 64'h0000000000000000;
    assign tied_to_vcc_i         = 1'b1;
    assign tied_to_vcc_vec_i     = 8'hff;


    xilinx_gth_16b_5g_cpll_GT_USRCLK_SOURCE gt_usrclk_source
   (
    .Q7_CLK0_GTREFCLK_PAD_N_IN  (Q7_CLK0_GTREFCLK_PAD_N_IN),
    .Q7_CLK0_GTREFCLK_PAD_P_IN  (Q7_CLK0_GTREFCLK_PAD_P_IN),
    .Q7_CLK0_GTREFCLK_OUT       (q7_clk0_refclk_i),
 
    .GT0_TXUSRCLK_OUT    (gt0_txusrclk_i),
    .GT0_TXUSRCLK2_OUT   (gt0_txusrclk2_i),
    .GT0_TXOUTCLK_IN     (gt0_txoutclk_i),
    .GT0_RXUSRCLK_OUT    (gt0_rxusrclk_i),
    .GT0_RXUSRCLK2_OUT   (gt0_rxusrclk2_i),
    .GT0_RXOUTCLK_IN     (gt0_rxoutclk_i),
 
 
    .GT1_TXUSRCLK_OUT    (gt1_txusrclk_i),
    .GT1_TXUSRCLK2_OUT   (gt1_txusrclk2_i),
    .GT1_TXOUTCLK_IN     (gt1_txoutclk_i),
    .GT1_RXUSRCLK_OUT    (gt1_rxusrclk_i),
    .GT1_RXUSRCLK2_OUT   (gt1_rxusrclk2_i),
    .GT1_RXOUTCLK_IN     (gt1_rxoutclk_i),
 
 
    .GT2_TXUSRCLK_OUT    (gt2_txusrclk_i),
    .GT2_TXUSRCLK2_OUT   (gt2_txusrclk2_i),
    .GT2_TXOUTCLK_IN     (gt2_txoutclk_i),
    .GT2_RXUSRCLK_OUT    (gt2_rxusrclk_i),
    .GT2_RXUSRCLK2_OUT   (gt2_rxusrclk2_i),
    .GT2_RXOUTCLK_IN     (gt2_rxoutclk_i),
 
 
    .GT3_TXUSRCLK_OUT    (gt3_txusrclk_i),
    .GT3_TXUSRCLK2_OUT   (gt3_txusrclk2_i),
    .GT3_TXOUTCLK_IN     (gt3_txoutclk_i),
    .GT3_RXUSRCLK_OUT    (gt3_rxusrclk_i),
    .GT3_RXUSRCLK2_OUT   (gt3_rxusrclk2_i),
    .GT3_RXOUTCLK_IN     (gt3_rxoutclk_i),
 
    .DRPCLK_IN (DRP_CLK_IN),
    .DRPCLK_OUT(drpclk_in_i)
);

    //***********************************************************************//
    //                                                                       //
    //--------------------------- The GT Wrapper ----------------------------//
    //                                                                       //
    //***********************************************************************//
    
    // Use the instantiation template in the example directory to add the GT wrapper to your design.
    // In this example, the wrapper is wired up for basic operation with a frame generator and frame 
    // checker. The GTs will reset, then attempt to align and transmit data. If channel bonding is 
    // enabled, bonding should occur after alignment.
    
    xilinx_gth_16b_5g_cpll_init #
    (
        .EXAMPLE_SIM_GTRESET_SPEEDUP    (EXAMPLE_SIM_GTRESET_SPEEDUP),
        .EXAMPLE_SIMULATION             (EXAMPLE_SIMULATION),
        .STABLE_CLOCK_PERIOD            (STABLE_CLOCK_PERIOD),
        .EXAMPLE_USE_CHIPSCOPE          (EXAMPLE_USE_CHIPSCOPE)
    )
    xilinx_gth_16b_5g_cpll_init_i
    (
        .SYSCLK_IN                      (drpclk_in_i),
        .SOFT_RESET_IN                  (tied_to_ground_i),
        .DONT_RESET_ON_DATA_ERROR_IN    (tied_to_ground_i),
        .GT0_TX_FSM_RESET_DONE_OUT      (gt0_txfsmresetdone_i),
        .GT0_RX_FSM_RESET_DONE_OUT      (gt0_rxfsmresetdone_i),
        .GT0_DATA_VALID_IN              (gt0_track_data_i),
        .GT1_TX_FSM_RESET_DONE_OUT      (gt1_txfsmresetdone_i),
        .GT1_RX_FSM_RESET_DONE_OUT      (gt1_rxfsmresetdone_i),
        .GT1_DATA_VALID_IN              (gt1_track_data_i),
        .GT2_TX_FSM_RESET_DONE_OUT      (gt2_txfsmresetdone_i),
        .GT2_RX_FSM_RESET_DONE_OUT      (gt2_rxfsmresetdone_i),
        .GT2_DATA_VALID_IN              (gt2_track_data_i),
        .GT3_TX_FSM_RESET_DONE_OUT      (gt3_txfsmresetdone_i),
        .GT3_RX_FSM_RESET_DONE_OUT      (gt3_rxfsmresetdone_i),
        .GT3_DATA_VALID_IN              (gt3_track_data_i),

        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT0  (X1Y32)

        //------------------------------- CPLL Ports -------------------------------
        .GT0_CPLLFBCLKLOST_OUT          (gt0_cpllfbclklost_i),
        .GT0_CPLLLOCK_OUT               (gt0_cplllock_i),
        .GT0_CPLLLOCKDETCLK_IN          (drpclk_in_i),
        .GT0_CPLLRESET_IN               (gt0_cpllreset_i),
        //------------------------ Channel - Clocking Ports ------------------------
        .GT0_GTREFCLK0_IN               (q7_clk0_refclk_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .GT0_DRPADDR_IN                 (gt0_drpaddr_i),
        .GT0_DRPCLK_IN                  (drpclk_in_i),
        .GT0_DRPDI_IN                   (gt0_drpdi_i),
        .GT0_DRPDO_OUT                  (gt0_drpdo_i),
        .GT0_DRPEN_IN                   (gt0_drpen_i),
        .GT0_DRPRDY_OUT                 (gt0_drprdy_i),
        .GT0_DRPWE_IN                   (gt0_drpwe_i),
        //----------------------------- Loopback Ports -----------------------------
        .GT0_LOOPBACK_IN                (gt0_loopback_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .GT0_RXUSERRDY_IN               (gt0_rxuserrdy_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .GT0_EYESCANDATAERROR_OUT       (gt0_eyescandataerror_i),
        //----------------------- Receive Ports - CDR Ports ------------------------
        .GT0_RXCDRLOCK_OUT              (gt0_rxcdrlock_i),
        //---------------- Receive Ports - FPGA RX Interface Ports -----------------
        .GT0_RXUSRCLK_IN                (gt0_rxusrclk_i),
        .GT0_RXUSRCLK2_IN               (gt0_rxusrclk_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .GT0_RXDATA_OUT                 (gt0_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .GT0_RXPRBSERR_OUT              (gt0_rxprbserr_i),
        .GT0_RXPRBSSEL_IN               (gt0_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .GT0_RXPRBSCNTRESET_IN          (gt0_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .GT0_RXDISPERR_OUT              (gt0_rxdisperr_i),
        .GT0_RXNOTINTABLE_OUT           (gt0_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .GT0_GTHRXN_IN                  (RXN_IN[0]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .GT0_RXBYTEISALIGNED_OUT        (gt0_rxbyteisaligned_i),
        .GT0_RXCOMMADET_OUT             (gt0_rxcommadet_i),
        .GT0_RXMCOMMAALIGNEN_IN         (gt0_rxmcommaalignen_i),
        .GT0_RXPCOMMAALIGNEN_IN         (gt0_rxpcommaalignen_i),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .GT0_RXOUTCLK_OUT               (gt0_rxoutclk_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .GT0_GTRXRESET_IN               (gt0_gtrxreset_i),
        //--------------- Receive Ports - RX Polarity Control Ports ----------------
        .GT0_RXPOLARITY_IN              (gt0_rxpolarity_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .GT0_RXCHARISCOMMA_OUT          (gt0_rxchariscomma_i),
        .GT0_RXCHARISK_OUT              (gt0_rxcharisk_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .GT0_GTHRXP_IN                  (RXP_IN[0]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .GT0_RXRESETDONE_OUT            (gt0_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .GT0_GTTXRESET_IN               (gt0_gttxreset_i),
        .GT0_TXUSERRDY_IN               (gt0_txuserrdy_i),
        //---------------- Transmit Ports - FPGA TX Interface Ports ----------------
        .GT0_TXUSRCLK_IN                (gt0_txusrclk_i),
        .GT0_TXUSRCLK2_IN               (gt0_txusrclk_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .GT0_TXDATA_IN                  (gt0_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GT0_GTHTXN_OUT                 (TXN_OUT[0]),
        .GT0_GTHTXP_OUT                 (TXP_OUT[0]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .GT0_TXOUTCLK_OUT               (gt0_txoutclk_i),
        .GT0_TXOUTCLKFABRIC_OUT         (gt0_txoutclkfabric_i),
        .GT0_TXOUTCLKPCS_OUT            (gt0_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .GT0_TXRESETDONE_OUT            (gt0_txresetdone_i),
        //--------------- Transmit Ports - TX Polarity Control Ports ---------------
        .GT0_TXPOLARITY_IN              (gt0_txpolarity_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .GT0_TXPRBSSEL_IN               (gt0_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .GT0_TXCHARISK_IN               (gt0_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT1  (X1Y33)

        //------------------------------- CPLL Ports -------------------------------
        .GT1_CPLLFBCLKLOST_OUT          (gt1_cpllfbclklost_i),
        .GT1_CPLLLOCK_OUT               (gt1_cplllock_i),
        .GT1_CPLLLOCKDETCLK_IN          (drpclk_in_i),
        .GT1_CPLLRESET_IN               (gt1_cpllreset_i),
        //------------------------ Channel - Clocking Ports ------------------------
        .GT1_GTREFCLK0_IN               (q7_clk0_refclk_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .GT1_DRPADDR_IN                 (gt1_drpaddr_i),
        .GT1_DRPCLK_IN                  (drpclk_in_i),
        .GT1_DRPDI_IN                   (gt1_drpdi_i),
        .GT1_DRPDO_OUT                  (gt1_drpdo_i),
        .GT1_DRPEN_IN                   (gt1_drpen_i),
        .GT1_DRPRDY_OUT                 (gt1_drprdy_i),
        .GT1_DRPWE_IN                   (gt1_drpwe_i),
        //----------------------------- Loopback Ports -----------------------------
        .GT1_LOOPBACK_IN                (gt1_loopback_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .GT1_RXUSERRDY_IN               (gt1_rxuserrdy_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .GT1_EYESCANDATAERROR_OUT       (gt1_eyescandataerror_i),
        //----------------------- Receive Ports - CDR Ports ------------------------
        .GT1_RXCDRLOCK_OUT              (gt1_rxcdrlock_i),
        //---------------- Receive Ports - FPGA RX Interface Ports -----------------
        .GT1_RXUSRCLK_IN                (gt1_rxusrclk_i),
        .GT1_RXUSRCLK2_IN               (gt1_rxusrclk_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .GT1_RXDATA_OUT                 (gt1_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .GT1_RXPRBSERR_OUT              (gt1_rxprbserr_i),
        .GT1_RXPRBSSEL_IN               (gt1_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .GT1_RXPRBSCNTRESET_IN          (gt1_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .GT1_RXDISPERR_OUT              (gt1_rxdisperr_i),
        .GT1_RXNOTINTABLE_OUT           (gt1_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .GT1_GTHRXN_IN                  (RXN_IN[1]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .GT1_RXBYTEISALIGNED_OUT        (gt1_rxbyteisaligned_i),
        .GT1_RXCOMMADET_OUT             (gt1_rxcommadet_i),
        .GT1_RXMCOMMAALIGNEN_IN         (gt1_rxmcommaalignen_i),
        .GT1_RXPCOMMAALIGNEN_IN         (gt1_rxpcommaalignen_i),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .GT1_RXOUTCLK_OUT               (gt1_rxoutclk_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .GT1_GTRXRESET_IN               (gt1_gtrxreset_i),
        //--------------- Receive Ports - RX Polarity Control Ports ----------------
        .GT1_RXPOLARITY_IN              (gt1_rxpolarity_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .GT1_RXCHARISCOMMA_OUT          (gt1_rxchariscomma_i),
        .GT1_RXCHARISK_OUT              (gt1_rxcharisk_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .GT1_GTHRXP_IN                  (RXP_IN[1]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .GT1_RXRESETDONE_OUT            (gt1_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .GT1_GTTXRESET_IN               (gt1_gttxreset_i),
        .GT1_TXUSERRDY_IN               (gt1_txuserrdy_i),
        //---------------- Transmit Ports - FPGA TX Interface Ports ----------------
        .GT1_TXUSRCLK_IN                (gt0_txusrclk_i),
        .GT1_TXUSRCLK2_IN               (gt0_txusrclk_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .GT1_TXDATA_IN                  (gt1_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GT1_GTHTXN_OUT                 (TXN_OUT[1]),
        .GT1_GTHTXP_OUT                 (TXP_OUT[1]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .GT1_TXOUTCLK_OUT               (gt1_txoutclk_i),
        .GT1_TXOUTCLKFABRIC_OUT         (gt1_txoutclkfabric_i),
        .GT1_TXOUTCLKPCS_OUT            (gt1_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .GT1_TXRESETDONE_OUT            (gt1_txresetdone_i),
        //--------------- Transmit Ports - TX Polarity Control Ports ---------------
        .GT1_TXPOLARITY_IN              (gt1_txpolarity_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .GT1_TXPRBSSEL_IN               (gt1_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .GT1_TXCHARISK_IN               (gt1_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT2  (X1Y34)

        //------------------------------- CPLL Ports -------------------------------
        .GT2_CPLLFBCLKLOST_OUT          (gt2_cpllfbclklost_i),
        .GT2_CPLLLOCK_OUT               (gt2_cplllock_i),
        .GT2_CPLLLOCKDETCLK_IN          (drpclk_in_i),
        .GT2_CPLLRESET_IN               (gt2_cpllreset_i),
        //------------------------ Channel - Clocking Ports ------------------------
        .GT2_GTREFCLK0_IN               (q7_clk0_refclk_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .GT2_DRPADDR_IN                 (gt2_drpaddr_i),
        .GT2_DRPCLK_IN                  (drpclk_in_i),
        .GT2_DRPDI_IN                   (gt2_drpdi_i),
        .GT2_DRPDO_OUT                  (gt2_drpdo_i),
        .GT2_DRPEN_IN                   (gt2_drpen_i),
        .GT2_DRPRDY_OUT                 (gt2_drprdy_i),
        .GT2_DRPWE_IN                   (gt2_drpwe_i),
        //----------------------------- Loopback Ports -----------------------------
        .GT2_LOOPBACK_IN                (gt2_loopback_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .GT2_RXUSERRDY_IN               (gt2_rxuserrdy_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .GT2_EYESCANDATAERROR_OUT       (gt2_eyescandataerror_i),
        //----------------------- Receive Ports - CDR Ports ------------------------
        .GT2_RXCDRLOCK_OUT              (gt2_rxcdrlock_i),
        //---------------- Receive Ports - FPGA RX Interface Ports -----------------
        .GT2_RXUSRCLK_IN                (gt2_rxusrclk_i),
        .GT2_RXUSRCLK2_IN               (gt2_rxusrclk_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .GT2_RXDATA_OUT                 (gt2_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .GT2_RXPRBSERR_OUT              (gt2_rxprbserr_i),
        .GT2_RXPRBSSEL_IN               (gt2_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .GT2_RXPRBSCNTRESET_IN          (gt2_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .GT2_RXDISPERR_OUT              (gt2_rxdisperr_i),
        .GT2_RXNOTINTABLE_OUT           (gt2_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .GT2_GTHRXN_IN                  (RXN_IN[2]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .GT2_RXBYTEISALIGNED_OUT        (gt2_rxbyteisaligned_i),
        .GT2_RXCOMMADET_OUT             (gt2_rxcommadet_i),
        .GT2_RXMCOMMAALIGNEN_IN         (gt2_rxmcommaalignen_i),
        .GT2_RXPCOMMAALIGNEN_IN         (gt2_rxpcommaalignen_i),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .GT2_RXOUTCLK_OUT               (gt2_rxoutclk_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .GT2_GTRXRESET_IN               (gt2_gtrxreset_i),
        //--------------- Receive Ports - RX Polarity Control Ports ----------------
        .GT2_RXPOLARITY_IN              (gt2_rxpolarity_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .GT2_RXCHARISCOMMA_OUT          (gt2_rxchariscomma_i),
        .GT2_RXCHARISK_OUT              (gt2_rxcharisk_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .GT2_GTHRXP_IN                  (RXP_IN[2]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .GT2_RXRESETDONE_OUT            (gt2_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .GT2_GTTXRESET_IN               (gt2_gttxreset_i),
        .GT2_TXUSERRDY_IN               (gt2_txuserrdy_i),
        //---------------- Transmit Ports - FPGA TX Interface Ports ----------------
        .GT2_TXUSRCLK_IN                (gt0_txusrclk_i),
        .GT2_TXUSRCLK2_IN               (gt0_txusrclk_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .GT2_TXDATA_IN                  (gt2_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GT2_GTHTXN_OUT                 (TXN_OUT[2]),
        .GT2_GTHTXP_OUT                 (TXP_OUT[2]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .GT2_TXOUTCLK_OUT               (gt2_txoutclk_i),
        .GT2_TXOUTCLKFABRIC_OUT         (gt2_txoutclkfabric_i),
        .GT2_TXOUTCLKPCS_OUT            (gt2_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .GT2_TXRESETDONE_OUT            (gt2_txresetdone_i),
        //--------------- Transmit Ports - TX Polarity Control Ports ---------------
        .GT2_TXPOLARITY_IN              (gt2_txpolarity_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .GT2_TXPRBSSEL_IN               (gt2_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .GT2_TXCHARISK_IN               (gt2_txcharisk_i),


        //_____________________________________________________________________
        //_____________________________________________________________________
        //GT3  (X1Y35)

        //------------------------------- CPLL Ports -------------------------------
        .GT3_CPLLFBCLKLOST_OUT          (gt3_cpllfbclklost_i),
        .GT3_CPLLLOCK_OUT               (gt3_cplllock_i),
        .GT3_CPLLLOCKDETCLK_IN          (drpclk_in_i),
        .GT3_CPLLRESET_IN               (gt3_cpllreset_i),
        //------------------------ Channel - Clocking Ports ------------------------
        .GT3_GTREFCLK0_IN               (q7_clk0_refclk_i),
        //-------------------------- Channel - DRP Ports  --------------------------
        .GT3_DRPADDR_IN                 (gt3_drpaddr_i),
        .GT3_DRPCLK_IN                  (drpclk_in_i),
        .GT3_DRPDI_IN                   (gt3_drpdi_i),
        .GT3_DRPDO_OUT                  (gt3_drpdo_i),
        .GT3_DRPEN_IN                   (gt3_drpen_i),
        .GT3_DRPRDY_OUT                 (gt3_drprdy_i),
        .GT3_DRPWE_IN                   (gt3_drpwe_i),
        //----------------------------- Loopback Ports -----------------------------
        .GT3_LOOPBACK_IN                (gt3_loopback_i),
        //------------------- RX Initialization and Reset Ports --------------------
        .GT3_RXUSERRDY_IN               (gt3_rxuserrdy_i),
        //------------------------ RX Margin Analysis Ports ------------------------
        .GT3_EYESCANDATAERROR_OUT       (gt3_eyescandataerror_i),
        //----------------------- Receive Ports - CDR Ports ------------------------
        .GT3_RXCDRLOCK_OUT              (gt3_rxcdrlock_i),
        //---------------- Receive Ports - FPGA RX Interface Ports -----------------
        .GT3_RXUSRCLK_IN                (gt3_rxusrclk_i),
        .GT3_RXUSRCLK2_IN               (gt3_rxusrclk_i),
        //---------------- Receive Ports - FPGA RX interface Ports -----------------
        .GT3_RXDATA_OUT                 (gt3_rxdata_i),
        //----------------- Receive Ports - Pattern Checker Ports ------------------
        .GT3_RXPRBSERR_OUT              (gt3_rxprbserr_i),
        .GT3_RXPRBSSEL_IN               (gt3_rxprbssel_i),
        //----------------- Receive Ports - Pattern Checker ports ------------------
        .GT3_RXPRBSCNTRESET_IN          (gt3_rxprbscntreset_i),
        //---------------- Receive Ports - RX 8B/10B Decoder Ports -----------------
        .GT3_RXDISPERR_OUT              (gt3_rxdisperr_i),
        .GT3_RXNOTINTABLE_OUT           (gt3_rxnotintable_i),
        //---------------------- Receive Ports - RX AFE Ports ----------------------
        .GT3_GTHRXN_IN                  (RXN_IN[3]),
        //------------ Receive Ports - RX Byte and Word Alignment Ports ------------
        .GT3_RXBYTEISALIGNED_OUT        (gt3_rxbyteisaligned_i),
        .GT3_RXCOMMADET_OUT             (gt3_rxcommadet_i),
        .GT3_RXMCOMMAALIGNEN_IN         (gt3_rxmcommaalignen_i),
        .GT3_RXPCOMMAALIGNEN_IN         (gt3_rxpcommaalignen_i),
        //------------- Receive Ports - RX Fabric Output Control Ports -------------
        .GT3_RXOUTCLK_OUT               (gt3_rxoutclk_i),
        //----------- Receive Ports - RX Initialization and Reset Ports ------------
        .GT3_GTRXRESET_IN               (gt3_gtrxreset_i),
        //--------------- Receive Ports - RX Polarity Control Ports ----------------
        .GT3_RXPOLARITY_IN              (gt3_rxpolarity_i),
        //----------------- Receive Ports - RX8B/10B Decoder Ports -----------------
        .GT3_RXCHARISCOMMA_OUT          (gt3_rxchariscomma_i),
        .GT3_RXCHARISK_OUT              (gt3_rxcharisk_i),
        //---------------------- Receive Ports -RX AFE Ports -----------------------
        .GT3_GTHRXP_IN                  (RXP_IN[3]),
        //------------ Receive Ports -RX Initialization and Reset Ports ------------
        .GT3_RXRESETDONE_OUT            (gt3_rxresetdone_i),
        //------------------- TX Initialization and Reset Ports --------------------
        .GT3_GTTXRESET_IN               (gt3_gttxreset_i),
        .GT3_TXUSERRDY_IN               (gt3_txuserrdy_i),
        //---------------- Transmit Ports - FPGA TX Interface Ports ----------------
        .GT3_TXUSRCLK_IN                (gt0_txusrclk_i),
        .GT3_TXUSRCLK2_IN               (gt0_txusrclk_i),
        //---------------- Transmit Ports - TX Data Path interface -----------------
        .GT3_TXDATA_IN                  (gt3_txdata_i),
        //-------------- Transmit Ports - TX Driver and OOB signaling --------------
        .GT3_GTHTXN_OUT                 (TXN_OUT[3]),
        .GT3_GTHTXP_OUT                 (TXP_OUT[3]),
        //--------- Transmit Ports - TX Fabric Clock Output Control Ports ----------
        .GT3_TXOUTCLK_OUT               (gt3_txoutclk_i),
        .GT3_TXOUTCLKFABRIC_OUT         (gt3_txoutclkfabric_i),
        .GT3_TXOUTCLKPCS_OUT            (gt3_txoutclkpcs_i),
        //----------- Transmit Ports - TX Initialization and Reset Ports -----------
        .GT3_TXRESETDONE_OUT            (gt3_txresetdone_i),
        //--------------- Transmit Ports - TX Polarity Control Ports ---------------
        .GT3_TXPOLARITY_IN              (gt3_txpolarity_i),
        //---------------- Transmit Ports - pattern Generator Ports ----------------
        .GT3_TXPRBSSEL_IN               (gt3_txprbssel_i),
        //--------- Transmit Transmit Ports - 8b10b Encoder Control Ports ----------
        .GT3_TXCHARISK_IN               (gt3_txcharisk_i),



         //____________________________COMMON PORTS________________________________
        //-------------------- Common Block  - Ref Clock Ports ---------------------
        .GT0_GTREFCLK0_COMMON_IN        (q7_clk0_refclk_i),
        //----------------------- Common Block - QPLL Ports ------------------------
        .GT0_QPLLLOCK_OUT               (gt0_qplllock_i),
        .GT0_QPLLLOCKDETCLK_IN          (drpclk_in_i),
        .GT0_QPLLRESET_IN               (gt0_qpllreset_i)

    );



    //***********************************************************************//
    //                                                                       //
    //--------------------------- User Module Resets-------------------------//
    //                                                                       //
    //***********************************************************************//
    // All the User Modules i.e. FRAME_GEN, FRAME_CHECK and the sync modules
    // are held in reset till the RESETDONE goes high. 
    // The RESETDONE is registered a couple of times on *USRCLK2 and connected 
    // to the reset of the modules
    
    always @(posedge gt0_rxusrclk_i or negedge gt0_rxresetdone_i)
    begin
        if (!gt0_rxresetdone_i)
        begin
            gt0_rxresetdone_r    <=   `DLY 1'b0;
            gt0_rxresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt0_rxresetdone_r    <=   `DLY gt0_rxresetdone_i;
            gt0_rxresetdone_r2   <=   `DLY gt0_rxresetdone_r;
            gt0_rxresetdone_r3   <=   `DLY gt0_rxresetdone_r2;
        end
    end
    

    
    always @(posedge gt0_txusrclk_i or negedge gt0_txfsmresetdone_i)
    begin
        if (!gt0_txfsmresetdone_i)
        begin
            gt0_txfsmresetdone_r    <=   `DLY 1'b0;
            gt0_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt0_txfsmresetdone_r    <=   `DLY gt0_txfsmresetdone_i;
            gt0_txfsmresetdone_r2   <=   `DLY gt0_txfsmresetdone_r;
        end
    end

    always @(posedge gt1_rxusrclk_i or negedge gt1_rxresetdone_i)
    begin
        if (!gt1_rxresetdone_i)
        begin
            gt1_rxresetdone_r    <=   `DLY 1'b0;
            gt1_rxresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt1_rxresetdone_r    <=   `DLY gt1_rxresetdone_i;
            gt1_rxresetdone_r2   <=   `DLY gt1_rxresetdone_r;
            gt1_rxresetdone_r3   <=   `DLY gt1_rxresetdone_r2;
        end
    end
    

    
    always @(posedge gt0_txusrclk_i or negedge gt1_txfsmresetdone_i)
    begin
        if (!gt1_txfsmresetdone_i)
        begin
            gt1_txfsmresetdone_r    <=   `DLY 1'b0;
            gt1_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt1_txfsmresetdone_r    <=   `DLY gt1_txfsmresetdone_i;
            gt1_txfsmresetdone_r2   <=   `DLY gt1_txfsmresetdone_r;
        end
    end

    always @(posedge gt2_rxusrclk_i or negedge gt2_rxresetdone_i)
    begin
        if (!gt2_rxresetdone_i)
        begin
            gt2_rxresetdone_r    <=   `DLY 1'b0;
            gt2_rxresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt2_rxresetdone_r    <=   `DLY gt2_rxresetdone_i;
            gt2_rxresetdone_r2   <=   `DLY gt2_rxresetdone_r;
            gt2_rxresetdone_r3   <=   `DLY gt2_rxresetdone_r2;
        end
    end
    

    
    always @(posedge gt0_txusrclk_i or negedge gt2_txfsmresetdone_i)
    begin
        if (!gt2_txfsmresetdone_i)
        begin
            gt2_txfsmresetdone_r    <=   `DLY 1'b0;
            gt2_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt2_txfsmresetdone_r    <=   `DLY gt2_txfsmresetdone_i;
            gt2_txfsmresetdone_r2   <=   `DLY gt2_txfsmresetdone_r;
        end
    end

    always @(posedge gt3_rxusrclk_i or negedge gt3_rxresetdone_i)
    begin
        if (!gt3_rxresetdone_i)
        begin
            gt3_rxresetdone_r    <=   `DLY 1'b0;
            gt3_rxresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt3_rxresetdone_r    <=   `DLY gt3_rxresetdone_i;
            gt3_rxresetdone_r2   <=   `DLY gt3_rxresetdone_r;
            gt3_rxresetdone_r3   <=   `DLY gt3_rxresetdone_r2;
        end
    end
    

    
    always @(posedge gt0_txusrclk_i or negedge gt3_txfsmresetdone_i)
    begin
        if (!gt3_txfsmresetdone_i)
        begin
            gt3_txfsmresetdone_r    <=   `DLY 1'b0;
            gt3_txfsmresetdone_r2   <=   `DLY 1'b0;
        end
        else
        begin
            gt3_txfsmresetdone_r    <=   `DLY gt3_txfsmresetdone_i;
            gt3_txfsmresetdone_r2   <=   `DLY gt3_txfsmresetdone_r;
        end
    end



    //***********************************************************************//
    //                                                                       //
    //------------------------  Frame Generators  ---------------------------//
    //                                                                       //
    //***********************************************************************//
    // The example design uses Block RAM based frame generators to provide test
    // data to the GTs for transmission. By default the frame generators are 
    // loaded with an incrementing data sequence that includes commas/alignment
    // characters for alignment. If your protocol uses channel bonding, the 
    // frame generator will also be preloaded with a channel bonding sequence.
    
    // You can modify the data transmitted by changing the INIT values of the frame
    // generator in this file. Pay careful attention to bit order and the spacing
    // of your control and alignment characters.


    xilinx_gth_16b_5g_cpll_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt0_frame_gen
    (
        // User Interface
        .TX_DATA_OUT                    ({gt0_txdata_float_i,gt0_txdata_i,gt0_txdata_float16_i}),
        .TXCTRL_OUT                     ({gt0_txcharisk_float_i,gt0_txcharisk_i}),

        // System Interface
        .USER_CLK                       (gt0_txusrclk_i),
        .SYSTEM_RESET                   (gt0_tx_system_reset_c)
    );

    xilinx_gth_16b_5g_cpll_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt1_frame_gen
    (
        // User Interface
        .TX_DATA_OUT                    ({gt1_txdata_float_i,gt1_txdata_i,gt1_txdata_float16_i}),
        .TXCTRL_OUT                     ({gt1_txcharisk_float_i,gt1_txcharisk_i}),

        // System Interface
        .USER_CLK                       (gt0_txusrclk_i),
        .SYSTEM_RESET                   (gt1_tx_system_reset_c)
    );

    xilinx_gth_16b_5g_cpll_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt2_frame_gen
    (
        // User Interface
        .TX_DATA_OUT                    ({gt2_txdata_float_i,gt2_txdata_i,gt2_txdata_float16_i}),
        .TXCTRL_OUT                     ({gt2_txcharisk_float_i,gt2_txcharisk_i}),

        // System Interface
        .USER_CLK                       (gt0_txusrclk_i),
        .SYSTEM_RESET                   (gt2_tx_system_reset_c)
    );

    xilinx_gth_16b_5g_cpll_GT_FRAME_GEN #
    (
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM)
    )
    gt3_frame_gen
    (
        // User Interface
        .TX_DATA_OUT                    ({gt3_txdata_float_i,gt3_txdata_i,gt3_txdata_float16_i}),
        .TXCTRL_OUT                     ({gt3_txcharisk_float_i,gt3_txcharisk_i}),

        // System Interface
        .USER_CLK                       (gt0_txusrclk_i),
        .SYSTEM_RESET                   (gt3_tx_system_reset_c)
    );

    //***********************************************************************//
    //                                                                       //
    //------------------------  Frame Checkers  -----------------------------//
    //                                                                       //
    //***********************************************************************//
    // The example design uses Block RAM based frame checkers to verify incoming  
    // data. By default the frame generators are loaded with a data sequence that 
    // matches the outgoing sequence of the frame generators for the TX ports.
    
    // You can modify the expected data sequence by changing the INIT values of the frame
    // checkers in this file. Pay careful attention to bit order and the spacing
    // of your control and alignment characters.
    
    // When the frame checker receives data, it attempts to synchronise to the 
    // incoming pattern by looking for the first sequence in the pattern. Once it 
    // finds the first sequence, it increments through the sequence, and indicates an 
    // error whenever the next value received does not match the expected value.


    assign gt0_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt0_matchn_i;

    // gt0_frame_check0 is always connected to the lane with the start of char
    // and this lane starts off the data checking on all the other lanes. The INC_IN port is tied off
    assign gt0_inc_in_i = 1'b0;

    xilinx_gth_16b_5g_cpll_GT_FRAME_CHECK #
    (
        .RX_DATA_WIDTH(16),
        .RXCTRL_WIDTH(2),
        .COMMA_DOUBLE(16'h02bc),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
        .START_OF_PACKET_CHAR(16'h02bc)
    )
    gt0_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt0_rxdata_i),
        .RXCTRL_IN                      (gt0_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt0_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt0_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             ( ),
        .RX_CHANBOND_SEQ_IN             (tied_to_ground_i),
        // Control Interface
        .INC_IN                         (gt0_inc_in_i),
        .INC_OUT                        (gt0_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt0_matchn_i),
        .RESET_ON_ERROR_IN              (gt0_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt0_rxusrclk_i),
        .SYSTEM_RESET                   (gt0_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt0_error_count_i),
        .TRACK_DATA_OUT                 (gt0_track_data_i)
    );


    assign gt1_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt1_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt1_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    xilinx_gth_16b_5g_cpll_GT_FRAME_CHECK #
    (
        .RX_DATA_WIDTH(16),
        .RXCTRL_WIDTH(2),
        .COMMA_DOUBLE(16'h02bc),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
        .START_OF_PACKET_CHAR(16'h02bc)
    )
    gt1_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt1_rxdata_i),
        .RXCTRL_IN                      (gt1_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt1_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt1_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             ( ),
        .RX_CHANBOND_SEQ_IN             (tied_to_ground_i),
        // Control Interface
        .INC_IN                         (gt1_inc_in_i),
        .INC_OUT                        (gt1_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt1_matchn_i),
        .RESET_ON_ERROR_IN              (gt1_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt1_rxusrclk_i),
        .SYSTEM_RESET                   (gt1_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt1_error_count_i),
        .TRACK_DATA_OUT                 (gt1_track_data_i)
    );


    assign gt2_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt2_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt2_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    xilinx_gth_16b_5g_cpll_GT_FRAME_CHECK #
    (
        .RX_DATA_WIDTH(16),
        .RXCTRL_WIDTH(2),
        .COMMA_DOUBLE(16'h02bc),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
        .START_OF_PACKET_CHAR(16'h02bc)
    )
    gt2_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt2_rxdata_i),
        .RXCTRL_IN                      (gt2_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt2_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt2_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             ( ),
        .RX_CHANBOND_SEQ_IN             (tied_to_ground_i),
        // Control Interface
        .INC_IN                         (gt2_inc_in_i),
        .INC_OUT                        (gt2_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt2_matchn_i),
        .RESET_ON_ERROR_IN              (gt2_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt2_rxusrclk_i),
        .SYSTEM_RESET                   (gt2_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt2_error_count_i),
        .TRACK_DATA_OUT                 (gt2_track_data_i)
    );


    assign gt3_frame_check_reset_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?reset_on_data_error_i:gt3_matchn_i;

    // in the "independent lanes" configuration, each of the lanes looks for the unique start char and
    // in this case, the INC_IN port is tied off.
    // Else, the data checking is triggered by the "master" lane
    assign gt3_inc_in_i = (EXAMPLE_CONFIG_INDEPENDENT_LANES==0)?gt0_inc_out_i:1'b0;

    xilinx_gth_16b_5g_cpll_GT_FRAME_CHECK #
    (
        .RX_DATA_WIDTH(16),
        .RXCTRL_WIDTH(2),
        .COMMA_DOUBLE(16'h02bc),
        .WORDS_IN_BRAM(EXAMPLE_WORDS_IN_BRAM),
        .START_OF_PACKET_CHAR(16'h02bc)
    )
    gt3_frame_check
    (
        // GT Interface
        .RX_DATA_IN                     (gt3_rxdata_i),
        .RXCTRL_IN                      (gt3_rxcharisk_i),
        .RXENMCOMMADET_OUT              (gt3_rxmcommaalignen_i),
        .RXENPCOMMADET_OUT              (gt3_rxpcommaalignen_i),
        .RX_ENCHAN_SYNC_OUT             ( ),
        .RX_CHANBOND_SEQ_IN             (tied_to_ground_i),
        // Control Interface
        .INC_IN                         (gt3_inc_in_i),
        .INC_OUT                        (gt3_inc_out_i),
        .PATTERN_MATCHB_OUT             (gt3_matchn_i),
        .RESET_ON_ERROR_IN              (gt3_frame_check_reset_i),
        // System Interface
        .USER_CLK                       (gt3_rxusrclk_i),
        .SYSTEM_RESET                   (gt3_rx_system_reset_c),
        .ERROR_COUNT_OUT                (gt3_error_count_i),
        .TRACK_DATA_OUT                 (gt3_track_data_i)
    );



    assign TRACK_DATA_OUT = track_data_out_i;

    assign track_data_out_i = 
                                gt0_track_data_i &
                                gt1_track_data_i &
                                gt2_track_data_i &
                                gt3_track_data_i ;













//-------------------------------------------------------------------------------------


    //***********************************************************************//
    //                                                                       //
    //--------------------- Chipscope Connections ---------------------------//
    //                                                                       //
    //***********************************************************************//
    // When the example design is run in hardware, it uses chipscope to allow the
    // example design and GT wrapper to be controlled and monitored. The 
    // EXAMPLE_USE_CHIPSCOPE parameter allows chipscope to be removed for simulation.
generate
if (EXAMPLE_USE_CHIPSCOPE==1) 
begin : chipscope

    // ICON for all VIOs
    icon icon_i
    (
      .CONTROL0                         (shared_vio_control_i),
      .CONTROL1                         (tx_data_vio_control_i),
      .CONTROL2                         (rx_data_vio_control_i),
      .CONTROL3                         (ila_control_i),
      .CONTROL4                         (channel_drp_vio_control_i),
      .CONTROL5                         (common_drp_vio_control_i)
    );      

    // Shared VIO for Channel DRP  
    data_vio channel_drp_i
    (
      .CONTROL                          (channel_drp_vio_control_i),
      .ASYNC_IN                         (channel_drp_vio_async_in_i),
      .ASYNC_OUT                        (channel_drp_vio_async_out_i),
      .SYNC_IN                          (channel_drp_vio_sync_in_i),
      .SYNC_OUT                         (channel_drp_vio_sync_out_i),
      .CLK                              (drpclk_in_i)
    );

    // Shared VIO for Quad common DRP  
    data_vio common_drp_i
    (
      .CONTROL                          (common_drp_vio_control_i),
      .ASYNC_IN                         (common_drp_vio_async_in_i),
      .ASYNC_OUT                        (common_drp_vio_async_out_i),
      .SYNC_IN                          (common_drp_vio_sync_in_i),
      .SYNC_OUT                         (common_drp_vio_sync_out_i),
      .CLK                              (drpclk_in_i)
    );

    // Shared VIO for all GTs
    data_vio shared_vio_i
    (
      .CONTROL                          (shared_vio_control_i),
      .ASYNC_IN                         (shared_vio_in_i),
      .ASYNC_OUT                        (shared_vio_out_i),
      .SYNC_IN                          (tied_to_ground_vec_i[31:0]),
      .SYNC_OUT                         (),
      .CLK                              (tied_to_ground_i)
    );


    // TX VIO
    data_vio tx_data_vio_i
    (
      .CONTROL                          (tx_data_vio_control_i),
      .ASYNC_IN                         (tx_data_vio_async_in_i),
      .ASYNC_OUT                        (tx_data_vio_async_out_i),
      .SYNC_IN                          (tx_data_vio_sync_in_i),
      .SYNC_OUT                         (tx_data_vio_sync_out_i),
      .CLK                              (gt0_txusrclk_i)
    );
    
    // RX VIO
    data_vio rx_data_vio_i
    (
      .CONTROL                          (rx_data_vio_control_i),
      .ASYNC_IN                         (rx_data_vio_async_in_i),
      .ASYNC_OUT                        (rx_data_vio_async_out_i),
      .SYNC_IN                          (rx_data_vio_sync_in_i),
      .SYNC_OUT                         (rx_data_vio_sync_out_i),
      .CLK                              (rx_vio_ila_clk_i)
    );
    
    // RX ILA
    ila ila_i
    (
      .CONTROL                          (ila_control_i),
      .CLK                              (rx_vio_ila_clk_i),
      .TRIG0                            (ila_in_i)
    );


    // The RX VIO and ILA uses GT0's RXUSRCLK2
    assign  rx_vio_ila_clk_i = gt0_rxusrclk_i;

    // assign resets for frame_gen modules
    assign  gt0_tx_system_reset_c = !gt0_txfsmresetdone_r2 || user_tx_reset_i;
    assign  gt1_tx_system_reset_c = !gt1_txfsmresetdone_r2 || user_tx_reset_i;
    assign  gt2_tx_system_reset_c = !gt2_txfsmresetdone_r2 || user_tx_reset_i;
    assign  gt3_tx_system_reset_c = !gt3_txfsmresetdone_r2 || user_tx_reset_i;

    // assign resets for frame_check modules
    assign  gt0_rx_system_reset_c = !gt0_rxresetdone_r3 || user_rx_reset_i;
    assign  gt1_rx_system_reset_c = !gt1_rxresetdone_r3 || user_rx_reset_i;
    assign  gt2_rx_system_reset_c = !gt2_rxresetdone_r3 || user_rx_reset_i;
    assign  gt3_rx_system_reset_c = !gt3_rxresetdone_r3 || user_rx_reset_i;

    assign  gt0_gtrxreset_i = gtrxreset_i || !gt0_cplllock_i;
    assign  gt0_gttxreset_i = gttxreset_i || !gt0_cplllock_i;
    assign  gt1_gtrxreset_i = gtrxreset_i || !gt1_cplllock_i;
    assign  gt1_gttxreset_i = gttxreset_i || !gt1_cplllock_i;
    assign  gt2_gtrxreset_i = gtrxreset_i || !gt2_cplllock_i;
    assign  gt2_gttxreset_i = gttxreset_i || !gt2_cplllock_i;
    assign  gt3_gtrxreset_i = gtrxreset_i || !gt3_cplllock_i;
    assign  gt3_gttxreset_i = gttxreset_i || !gt3_cplllock_i;


      assign  gt0_cpllreset_i = cpllreset_i;
      assign  gt1_cpllreset_i = cpllreset_i;
      assign  gt2_cpllreset_i = cpllreset_i;
      assign  gt3_cpllreset_i = cpllreset_i;


    // Shared VIO Outputs
    assign  gttxreset_i                          =  shared_vio_out_i[31];
    assign  gtrxreset_i                          =  shared_vio_out_i[30];
    assign  user_tx_reset_i                      =  shared_vio_out_i[29];
    assign  user_rx_reset_i                      =  shared_vio_out_i[28];
    assign  mux_sel_i                            =  shared_vio_out_i[27:26];
    assign  cpllreset_i                          =  shared_vio_out_i[25];

    // Shared VIO Inputs
    assign  shared_vio_in_i[31:0]                =  32'b00000000000000000000000000000000;

    // Chipscope connections on GT 0
    assign  gt0_tx_data_vio_async_in_i[31:0]     =  32'b00000000000000000000000000000000;
    assign  gt0_tx_data_vio_sync_in_i[31]        =  gt0_txresetdone_i;
    assign  gt0_tx_data_vio_sync_in_i[30:0]      =  31'b0000000000000000000000000000000;
    assign  gt0_loopback_i                       =  tx_data_vio_async_out_i[31:29];
    assign  gt0_txuserrdy_i                      =  tx_data_vio_sync_out_i[31];
    assign  gt0_txprbssel_i                      =  tx_data_vio_sync_out_i[30:28];
    assign  gt0_txpolarity_i                     =  tx_data_vio_sync_out_i[27];
    assign  gt0_rx_data_vio_async_in_i[31:0]     =  32'b00000000000000000000000000000000;
    assign  gt0_rx_data_vio_sync_in_i[31]        =  gt0_rxresetdone_i;
    assign  gt0_rx_data_vio_sync_in_i[30:0]      =  31'b0000000000000000000000000000000;
    assign  gt0_rxuserrdy_i                      =  rx_data_vio_async_out_i[31];
    assign  gt0_rxprbscntreset_i                 =  rx_data_vio_sync_out_i[31];
    assign  gt0_rxprbssel_i                      =  rx_data_vio_sync_out_i[30:28];
    assign  gt0_rxpolarity_i                     =  rx_data_vio_sync_out_i[27];
    assign  gt0_ila_in_i[163:162]                =  gt0_rxchariscomma_i;
    assign  gt0_ila_in_i[161:160]                =  gt0_rxcharisk_i;
    assign  gt0_ila_in_i[159:158]                =  gt0_rxdisperr_i;
    assign  gt0_ila_in_i[157:156]                =  gt0_rxnotintable_i;
    assign  gt0_ila_in_i[155]                    =  gt0_rxbyteisaligned_i;
    assign  gt0_ila_in_i[154]                    =  gt0_rxcommadet_i;
    assign  gt0_ila_in_i[153]                    =  gt0_rxprbserr_i;
    assign  gt0_ila_in_i[152:137]                =  gt0_rxdata_i;
    assign  gt0_ila_in_i[136:129]                =  gt0_error_count_i;
    assign  gt0_ila_in_i[128]                    =  gt0_track_data_i;
    assign  gt0_ila_in_i[127:0]                  =  128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    assign  gt0_channel_drp_vio_async_in_i[31]   =  gt0_drprdy_i;
    assign  gt0_channel_drp_vio_async_in_i[30:15]=  gt0_drpdo_i;
    assign  gt0_channel_drp_vio_async_in_i[14:0] =  15'b000000000000000;
    assign  gt0_channel_drp_vio_sync_in_i[31:0]  =  32'b00000000000000000000000000000000;
    assign  gt0_drpaddr_i                        =  channel_drp_vio_async_out_i[31:23];
    assign  gt0_drpdi_i                          =  channel_drp_vio_async_out_i[22:7];
    assign  gt0_drpen_i                          =  channel_drp_vio_async_out_i[6];
    assign  gt0_drpwe_i                          =  channel_drp_vio_async_out_i[5];
    assign  gt0_common_drp_vio_async_in_i[31:0]  =  32'b00000000000000000000000000000000;
    assign  gt0_common_drp_vio_sync_in_i[31:0]   =  32'b00000000000000000000000000000000;

    // Chipscope connections on GT 1
    assign  gt1_tx_data_vio_async_in_i[31:0]     =  32'b00000000000000000000000000000000;
    assign  gt1_tx_data_vio_sync_in_i[31]        =  gt1_txresetdone_i;
    assign  gt1_tx_data_vio_sync_in_i[30:0]      =  31'b0000000000000000000000000000000;
    assign  gt1_loopback_i                       =  tx_data_vio_async_out_i[31:29];
    assign  gt1_txuserrdy_i                      =  tx_data_vio_sync_out_i[31];
    assign  gt1_txprbssel_i                      =  tx_data_vio_sync_out_i[30:28];
    assign  gt1_txpolarity_i                     =  tx_data_vio_sync_out_i[27];
    assign  gt1_rx_data_vio_async_in_i[31:0]     =  32'b00000000000000000000000000000000;
    assign  gt1_rx_data_vio_sync_in_i[31]        =  gt1_rxresetdone_i;
    assign  gt1_rx_data_vio_sync_in_i[30:0]      =  31'b0000000000000000000000000000000;
    assign  gt1_rxuserrdy_i                      =  rx_data_vio_async_out_i[31];
    assign  gt1_rxprbscntreset_i                 =  rx_data_vio_sync_out_i[31];
    assign  gt1_rxprbssel_i                      =  rx_data_vio_sync_out_i[30:28];
    assign  gt1_rxpolarity_i                     =  rx_data_vio_sync_out_i[27];
    assign  gt1_ila_in_i[163:162]                =  gt1_rxchariscomma_i;
    assign  gt1_ila_in_i[161:160]                =  gt1_rxcharisk_i;
    assign  gt1_ila_in_i[159:158]                =  gt1_rxdisperr_i;
    assign  gt1_ila_in_i[157:156]                =  gt1_rxnotintable_i;
    assign  gt1_ila_in_i[155]                    =  gt1_rxbyteisaligned_i;
    assign  gt1_ila_in_i[154]                    =  gt1_rxcommadet_i;
    assign  gt1_ila_in_i[153]                    =  gt1_rxprbserr_i;
    assign  gt1_ila_in_i[152:137]                =  gt1_rxdata_i;
    assign  gt1_ila_in_i[136:129]                =  gt1_error_count_i;
    assign  gt1_ila_in_i[128]                    =  gt1_track_data_i;
    assign  gt1_ila_in_i[127:0]                  =  128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    assign  gt1_channel_drp_vio_async_in_i[31]   =  gt1_drprdy_i;
    assign  gt1_channel_drp_vio_async_in_i[30:15]=  gt1_drpdo_i;
    assign  gt1_channel_drp_vio_async_in_i[14:0] =  15'b000000000000000;
    assign  gt1_channel_drp_vio_sync_in_i[31:0]  =  32'b00000000000000000000000000000000;
    assign  gt1_drpaddr_i                        =  channel_drp_vio_async_out_i[31:23];
    assign  gt1_drpdi_i                          =  channel_drp_vio_async_out_i[22:7];
    assign  gt1_drpen_i                          =  channel_drp_vio_async_out_i[6];
    assign  gt1_drpwe_i                          =  channel_drp_vio_async_out_i[5];

    // Chipscope connections on GT 2
    assign  gt2_tx_data_vio_async_in_i[31:0]     =  32'b00000000000000000000000000000000;
    assign  gt2_tx_data_vio_sync_in_i[31]        =  gt2_txresetdone_i;
    assign  gt2_tx_data_vio_sync_in_i[30:0]      =  31'b0000000000000000000000000000000;
    assign  gt2_loopback_i                       =  tx_data_vio_async_out_i[31:29];
    assign  gt2_txuserrdy_i                      =  tx_data_vio_sync_out_i[31];
    assign  gt2_txprbssel_i                      =  tx_data_vio_sync_out_i[30:28];
    assign  gt2_txpolarity_i                     =  tx_data_vio_sync_out_i[27];
    assign  gt2_rx_data_vio_async_in_i[31:0]     =  32'b00000000000000000000000000000000;
    assign  gt2_rx_data_vio_sync_in_i[31]        =  gt2_rxresetdone_i;
    assign  gt2_rx_data_vio_sync_in_i[30:0]      =  31'b0000000000000000000000000000000;
    assign  gt2_rxuserrdy_i                      =  rx_data_vio_async_out_i[31];
    assign  gt2_rxprbscntreset_i                 =  rx_data_vio_sync_out_i[31];
    assign  gt2_rxprbssel_i                      =  rx_data_vio_sync_out_i[30:28];
    assign  gt2_rxpolarity_i                     =  rx_data_vio_sync_out_i[27];
    assign  gt2_ila_in_i[163:162]                =  gt2_rxchariscomma_i;
    assign  gt2_ila_in_i[161:160]                =  gt2_rxcharisk_i;
    assign  gt2_ila_in_i[159:158]                =  gt2_rxdisperr_i;
    assign  gt2_ila_in_i[157:156]                =  gt2_rxnotintable_i;
    assign  gt2_ila_in_i[155]                    =  gt2_rxbyteisaligned_i;
    assign  gt2_ila_in_i[154]                    =  gt2_rxcommadet_i;
    assign  gt2_ila_in_i[153]                    =  gt2_rxprbserr_i;
    assign  gt2_ila_in_i[152:137]                =  gt2_rxdata_i;
    assign  gt2_ila_in_i[136:129]                =  gt2_error_count_i;
    assign  gt2_ila_in_i[128]                    =  gt2_track_data_i;
    assign  gt2_ila_in_i[127:0]                  =  128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    assign  gt2_channel_drp_vio_async_in_i[31]   =  gt2_drprdy_i;
    assign  gt2_channel_drp_vio_async_in_i[30:15]=  gt2_drpdo_i;
    assign  gt2_channel_drp_vio_async_in_i[14:0] =  15'b000000000000000;
    assign  gt2_channel_drp_vio_sync_in_i[31:0]  =  32'b00000000000000000000000000000000;
    assign  gt2_drpaddr_i                        =  channel_drp_vio_async_out_i[31:23];
    assign  gt2_drpdi_i                          =  channel_drp_vio_async_out_i[22:7];
    assign  gt2_drpen_i                          =  channel_drp_vio_async_out_i[6];
    assign  gt2_drpwe_i                          =  channel_drp_vio_async_out_i[5];

    // Chipscope connections on GT 3
    assign  gt3_tx_data_vio_async_in_i[31:0]     =  32'b00000000000000000000000000000000;
    assign  gt3_tx_data_vio_sync_in_i[31]        =  gt3_txresetdone_i;
    assign  gt3_tx_data_vio_sync_in_i[30:0]      =  31'b0000000000000000000000000000000;
    assign  gt3_loopback_i                       =  tx_data_vio_async_out_i[31:29];
    assign  gt3_txuserrdy_i                      =  tx_data_vio_sync_out_i[31];
    assign  gt3_txprbssel_i                      =  tx_data_vio_sync_out_i[30:28];
    assign  gt3_txpolarity_i                     =  tx_data_vio_sync_out_i[27];
    assign  gt3_rx_data_vio_async_in_i[31:0]     =  32'b00000000000000000000000000000000;
    assign  gt3_rx_data_vio_sync_in_i[31]        =  gt3_rxresetdone_i;
    assign  gt3_rx_data_vio_sync_in_i[30:0]      =  31'b0000000000000000000000000000000;
    assign  gt3_rxuserrdy_i                      =  rx_data_vio_async_out_i[31];
    assign  gt3_rxprbscntreset_i                 =  rx_data_vio_sync_out_i[31];
    assign  gt3_rxprbssel_i                      =  rx_data_vio_sync_out_i[30:28];
    assign  gt3_rxpolarity_i                     =  rx_data_vio_sync_out_i[27];
    assign  gt3_ila_in_i[163:162]                =  gt3_rxchariscomma_i;
    assign  gt3_ila_in_i[161:160]                =  gt3_rxcharisk_i;
    assign  gt3_ila_in_i[159:158]                =  gt3_rxdisperr_i;
    assign  gt3_ila_in_i[157:156]                =  gt3_rxnotintable_i;
    assign  gt3_ila_in_i[155]                    =  gt3_rxbyteisaligned_i;
    assign  gt3_ila_in_i[154]                    =  gt3_rxcommadet_i;
    assign  gt3_ila_in_i[153]                    =  gt3_rxprbserr_i;
    assign  gt3_ila_in_i[152:137]                =  gt3_rxdata_i;
    assign  gt3_ila_in_i[136:129]                =  gt3_error_count_i;
    assign  gt3_ila_in_i[128]                    =  gt3_track_data_i;
    assign  gt3_ila_in_i[127:0]                  =  128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
    assign  gt3_channel_drp_vio_async_in_i[31]   =  gt3_drprdy_i;
    assign  gt3_channel_drp_vio_async_in_i[30:15]=  gt3_drpdo_i;
    assign  gt3_channel_drp_vio_async_in_i[14:0] =  15'b000000000000000;
    assign  gt3_channel_drp_vio_sync_in_i[31:0]  =  32'b00000000000000000000000000000000;
    assign  gt3_drpaddr_i                        =  channel_drp_vio_async_out_i[31:23];
    assign  gt3_drpdi_i                          =  channel_drp_vio_async_out_i[22:7];
    assign  gt3_drpen_i                          =  channel_drp_vio_async_out_i[6];
    assign  gt3_drpwe_i                          =  channel_drp_vio_async_out_i[5];


    assign  tx_data_vio_async_in_i =    (mux_sel_i == 2'b00)?gt0_tx_data_vio_async_in_i:
                                        (mux_sel_i == 2'b01)?gt1_tx_data_vio_async_in_i:
                                        (mux_sel_i == 2'b10)?gt2_tx_data_vio_async_in_i:
                                                             gt3_tx_data_vio_async_in_i;

    assign  tx_data_vio_sync_in_i =     (mux_sel_i == 2'b00)?gt0_tx_data_vio_sync_in_i:
                                        (mux_sel_i == 2'b01)?gt1_tx_data_vio_sync_in_i:
                                        (mux_sel_i == 2'b10)?gt2_tx_data_vio_sync_in_i:
                                                             gt3_tx_data_vio_sync_in_i;


    assign  rx_data_vio_async_in_i =    (mux_sel_i == 2'b00)?gt0_rx_data_vio_async_in_i:
                                        (mux_sel_i == 2'b01)?gt1_rx_data_vio_async_in_i:
                                        (mux_sel_i == 2'b10)?gt2_rx_data_vio_async_in_i:
                                                             gt3_rx_data_vio_async_in_i;

    assign  rx_data_vio_sync_in_i =     (mux_sel_i == 2'b00)?gt0_rx_data_vio_sync_in_i:
                                        (mux_sel_i == 2'b01)?gt1_rx_data_vio_sync_in_i:
                                        (mux_sel_i == 2'b10)?gt2_rx_data_vio_sync_in_i:
                                                             gt3_rx_data_vio_sync_in_i;

    assign  ila_in_i =                  (mux_sel_i == 2'b00)?gt0_ila_in_i:
                                        (mux_sel_i == 2'b01)?gt1_ila_in_i:
                                        (mux_sel_i == 2'b10)?gt2_ila_in_i:
                                                             gt3_ila_in_i;

    

    assign  channel_drp_vio_async_in_i =(mux_sel_i == 2'b00)?gt0_channel_drp_vio_async_in_i:
                                        (mux_sel_i == 2'b01)?gt1_channel_drp_vio_async_in_i:
                                        (mux_sel_i == 2'b10)?gt2_channel_drp_vio_async_in_i:
                                                             gt3_channel_drp_vio_async_in_i;

    assign  channel_drp_vio_sync_in_i = (mux_sel_i == 2'b00)?gt0_channel_drp_vio_sync_in_i:
                                        (mux_sel_i == 2'b01)?gt1_channel_drp_vio_sync_in_i:
                                        (mux_sel_i == 2'b10)?gt2_channel_drp_vio_sync_in_i:
                                                             gt3_channel_drp_vio_sync_in_i;

    assign common_drp_vio_async_in_i = 32'h0;
    assign common_drp_vio_sync_in_i  = 32'h0;
   
 
end //end EXAMPLE_USE_CHIPSCOPE=1 generate section
else 
begin: no_chipscope 


    // assign resets for frame_gen modules
    assign  gt0_tx_system_reset_c = !gt0_txfsmresetdone_r2;
    assign  gt1_tx_system_reset_c = !gt1_txfsmresetdone_r2;
    assign  gt2_tx_system_reset_c = !gt2_txfsmresetdone_r2;
    assign  gt3_tx_system_reset_c = !gt3_txfsmresetdone_r2;

    // assign resets for frame_check modules
    assign  gt0_rx_system_reset_c = !gt0_rxresetdone_r3;
    assign  gt1_rx_system_reset_c = !gt1_rxresetdone_r3;
    assign  gt2_rx_system_reset_c = !gt2_rxresetdone_r3;
    assign  gt3_rx_system_reset_c = !gt3_rxresetdone_r3;

//-------------------------------------------------------------
    assign  gttxreset_i                          =  tied_to_ground_i;
    assign  gtrxreset_i                          =  tied_to_ground_i;
    assign  user_tx_reset_i                      =  tied_to_ground_i;
    assign  user_rx_reset_i                      =  tied_to_ground_i;
    assign  mux_sel_i                            =  tied_to_ground_vec_i[1:0];
    assign  gt0_loopback_i                       =  tied_to_ground_vec_i[2:0];
    assign  gt0_txprbssel_i                      =  tied_to_ground_vec_i[2:0];
    assign  gt0_txpolarity_i                     =  tied_to_ground_i;
    assign  gt0_rxprbscntreset_i                 =  tied_to_ground_i;
    assign  gt0_rxprbssel_i                      =  tied_to_ground_vec_i[2:0];
    assign  gt0_rxpolarity_i                     =  tied_to_ground_i;
    assign  gt0_drpaddr_i                        =  tied_to_ground_vec_i[8:0];
    assign  gt0_drpdi_i                          =  tied_to_ground_vec_i[15:0];
    assign  gt0_drpen_i                          =  tied_to_ground_i;
    assign  gt0_drpwe_i                          =  tied_to_ground_i;
    assign  gt1_loopback_i                       =  tied_to_ground_vec_i[2:0];
    assign  gt1_txprbssel_i                      =  tied_to_ground_vec_i[2:0];
    assign  gt1_txpolarity_i                     =  tied_to_ground_i;
    assign  gt1_rxprbscntreset_i                 =  tied_to_ground_i;
    assign  gt1_rxprbssel_i                      =  tied_to_ground_vec_i[2:0];
    assign  gt1_rxpolarity_i                     =  tied_to_ground_i;
    assign  gt1_drpaddr_i                        =  tied_to_ground_vec_i[8:0];
    assign  gt1_drpdi_i                          =  tied_to_ground_vec_i[15:0];
    assign  gt1_drpen_i                          =  tied_to_ground_i;
    assign  gt1_drpwe_i                          =  tied_to_ground_i;
    assign  gt2_loopback_i                       =  tied_to_ground_vec_i[2:0];
    assign  gt2_txprbssel_i                      =  tied_to_ground_vec_i[2:0];
    assign  gt2_txpolarity_i                     =  tied_to_ground_i;
    assign  gt2_rxprbscntreset_i                 =  tied_to_ground_i;
    assign  gt2_rxprbssel_i                      =  tied_to_ground_vec_i[2:0];
    assign  gt2_rxpolarity_i                     =  tied_to_ground_i;
    assign  gt2_drpaddr_i                        =  tied_to_ground_vec_i[8:0];
    assign  gt2_drpdi_i                          =  tied_to_ground_vec_i[15:0];
    assign  gt2_drpen_i                          =  tied_to_ground_i;
    assign  gt2_drpwe_i                          =  tied_to_ground_i;
    assign  gt3_loopback_i                       =  tied_to_ground_vec_i[2:0];
    assign  gt3_txprbssel_i                      =  tied_to_ground_vec_i[2:0];
    assign  gt3_txpolarity_i                     =  tied_to_ground_i;
    assign  gt3_rxprbscntreset_i                 =  tied_to_ground_i;
    assign  gt3_rxprbssel_i                      =  tied_to_ground_vec_i[2:0];
    assign  gt3_rxpolarity_i                     =  tied_to_ground_i;
    assign  gt3_drpaddr_i                        =  tied_to_ground_vec_i[8:0];
    assign  gt3_drpdi_i                          =  tied_to_ground_vec_i[15:0];
    assign  gt3_drpen_i                          =  tied_to_ground_i;
    assign  gt3_drpwe_i                          =  tied_to_ground_i;

end
endgenerate //End generate for EXAMPLE_USE_CHIPSCOPE

endmodule
    
//-------------------------------------------------------------------
//
//  VIO core module declaration
//
//-------------------------------------------------------------------
module data_vio
  (
    CONTROL,  
    ASYNC_IN, 
    ASYNC_OUT,
    SYNC_IN,  
    SYNC_OUT, 
    CLK      
  );
  inout  [35:0] CONTROL;
  input         CLK;
  input  [31:0] ASYNC_IN;
  output [31:0] ASYNC_OUT;
  input  [31:0] SYNC_IN;
  output [31:0] SYNC_OUT;
endmodule


//-------------------------------------------------------------------
//
//  ICON core module declaration
//
//-------------------------------------------------------------------
module icon
  (
      CONTROL0,
      CONTROL1,
      CONTROL2,
      CONTROL3,
      CONTROL4,
      CONTROL5
  );
  inout [35:0] CONTROL0;
  inout [35:0] CONTROL1;
  inout [35:0] CONTROL2;
  inout [35:0] CONTROL3;
  inout [35:0] CONTROL4;
  inout [35:0] CONTROL5;
endmodule


//-------------------------------------------------------------------
//
//  ILA core module declaration
//  This is used to allow RX signals to be monitored
//
//-------------------------------------------------------------------
module ila
  (
    CONTROL,
    CLK,
    TRIG0
  );
  inout [35:0]  CONTROL;
  input         CLK    ;
  input [163:0] TRIG0  ;
endmodule


